# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

[
  { :name => "vagrant-reload" },
  { :name => "vagrant-vbguest" },
].each do |plugin|

  if not Vagrant.has_plugin?(plugin[:name])
    raise "#{plugin[:name]} is required. Please run `vagrant plugin install #{plugin[:name]}`"
  end
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

	# VM do Gerenciador do Cluster
	config.vm.define "manager" do |manager|

		# Hostname da VM
		manager.vm.hostname = "manager.localdomain"
		
		# Imagem que será utilizada para configurar a VM
		manager.vm.box = "ubuntu/xenial64"
		
		# Configuracao da Rede e IP
		manager.vm.network "private_network", ip: "192.168.10.10"
		
		# Executa script para a configuracao do ambiente
		manager.vm.provision "shell", inline: "/bin/bash /vagrant/config_inicial.sh manager"
		
		# Restart da VM para efetivar as atualizacoes dos pacotes instalados
		manager.vm.provision :reload		
		
		# Executa script para a configuracao do Docker Swarm
                manager.vm.provision "shell", inline: "/bin/bash /vagrant/config_docker_swarm.sh firstmanager 192.168.10.10"		

		# Configuracoes passadas ao Provisionador, neste caso o VirtualBox
		manager.vm.provider "virtualbox" do |vbox|
		        
			# Desabilitar Tela
			vbox.gui = false
		
			# Nome da VM no VirtualBox
			vbox.name = "Manager_PI3"
			
			# Qtd de CPUs
			vbox.customize [ "modifyvm", :id, "--cpus", "1" ]
		        
			# Qtd de Memoria RAM
			vbox.customize [ "modifyvm", :id, "--memory", "512" ]
		end

	end

        # VM do worker1 do Cluster
        config.vm.define "worker1" do |worker1|

                # Hostname da VM
                worker1.vm.hostname = "worker1.localdomain"

                # Imagem que será utilizada para configurar a VM
                worker1.vm.box = "ubuntu/xenial64"

                # Configuracao da Rede e IP
                worker1.vm.network "private_network", ip: "192.168.10.20"

                # Executa script para a configuracao do ambiente
                worker1.vm.provision "shell", inline: "/bin/bash /vagrant/config_inicial.sh worker1"
		
                # Restart da VM para efetivar as atualizacoes dos pacotes instalados
                worker1.vm.provision :reload
		
		# Executa script para a configuracao do Docker Swarm
                worker1.vm.provision "shell", inline: "/bin/bash /vagrant/config_docker_swarm.sh worker 192.168.10.20"

                # Configuracoes passadas ao Provisionador, neste caso o VirtualBox
                worker1.vm.provider "virtualbox" do |vbox|

                        # Desabilitar Tela
                        vbox.gui = false

                        # Nome da VM no VirtualBox
                        vbox.name = "Worker1_PI3"

                        # Qtd de CPUs
                        vbox.customize [ "modifyvm", :id, "--cpus", "1" ]

                        # Qtd de Memoria RAM
                        vbox.customize [ "modifyvm", :id, "--memory", "512" ]
                end

        end

        # VM do worker2 do Cluster
        config.vm.define "worker2" do |worker2|

                # Hostname da VM
                worker2.vm.hostname = "worker2.localdomain"

                # Imagem que será utilizada para configurar a VM
                worker2.vm.box = "ubuntu/xenial64"

                # Configuracao da Rede e IP
                worker2.vm.network "private_network", ip: "192.168.10.30"

                # Executa script para a configuracao do ambiente
                worker2.vm.provision "shell", inline: "/bin/bash /vagrant/config_inicial.sh worker2"

                # Restart da VM para efetivar as atualizacoes dos pacotes instalados
                worker2.vm.provision :reload
		
		# Executa script para a configuracao do Docker Swarm
                worker2.vm.provision "shell", inline: "/bin/bash /vagrant/config_docker_swarm.sh worker 192.168.10.30"

                # Configuracoes passadas ao Provisionador, neste caso o VirtualBox
                worker2.vm.provider "virtualbox" do |vbox|

                        # Desabilitar Tela
                        vbox.gui = false

                        # Nome da VM no VirtualBox
                        vbox.name = "Worker2_PI3"

                        # Qtd de CPUs
                        vbox.customize [ "modifyvm", :id, "--cpus", "1" ]

                        # Qtd de Memoria RAM
                        vbox.customize [ "modifyvm", :id, "--memory", "512" ]
                end

        end
end
